# TestMind CI - Example Workflow
# This is an example configuration generated by TestMind
# Customize it based on your project needs

name: TestMind CI

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main

jobs:
  testmind:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install TestMind
        run: npm install -g @testmind/cli

      - name: Generate missing tests
        id: generate
        run: |
          testmind generate --coverage-gap --format json > generate-results.json
          echo "generated=$(jq -r '.generated' generate-results.json)" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Run tests
        id: test
        run: npm test
        continue-on-error: true

      - name: Self-heal failed tests
        id: heal
        if: steps.test.outcome == 'failure'
        run: |
          testmind heal --auto-fix --format json > heal-results.json
          echo "healed=$(jq -r '.healed' heal-results.json)" >> $GITHUB_OUTPUT
          echo "fixes=$(jq -r '.fixes' heal-results.json)" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Re-run tests after healing
        if: steps.heal.outputs.healed == 'true'
        run: npm test

      - name: Generate coverage report
        run: npm run test:coverage
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## 🤖 TestMind CI Results\n\n';

            // 测试生成结果
            if (fs.existsSync('generate-results.json')) {
              const genResults = JSON.parse(fs.readFileSync('generate-results.json', 'utf-8'));
              comment += `### ✨ Test Generation\n`;
              comment += `- Generated: ${genResults.generated} tests\n`;
              comment += `- Coverage gap closed: ${genResults.coverageIncrease}%\n\n`;
            }

            // 自愈结果
            if (fs.existsSync('heal-results.json')) {
              const healResults = JSON.parse(fs.readFileSync('heal-results.json', 'utf-8'));
              comment += `### 🔧 Self-Healing\n`;
              comment += `- Healed: ${healResults.healed} tests\n`;
              comment += `- Success rate: ${healResults.successRate}%\n\n`;
            }

            // 发布评论
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

